name: "Python Tests Runner"
description: "Runs Python unit and integration tests with pytest and uploads coverage to Codecov"

inputs:
  python-version:
    description: "Python version to use"
    required: false
    default: "3.10"
  test-type:
    description: "Type of tests to run (unit/integration/all)"
    required: false
    default: "all"
  codecov-token:
    description: "Codecov upload token"
    required: true

outputs:
  coverage-percentage:
    description: "Total coverage percentage"
    value: ${{ steps.coverage.outputs.percentage }}
  tests-passed:
    description: "Whether all tests passed"
    value: ${{ steps.run-tests.outputs.success }}

runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip
        cache-dependency-path: pyproject.toml

    - name: Generate requirements hash
      id: requirements-hash
      shell: bash
      run: |
        HASH=$(sha256sum pyproject.toml | cut -d ' ' -f 1)
        echo "hash=${HASH}" >> $GITHUB_OUTPUT

    - name: Cache virtualenv
      uses: actions/cache@v4
      id: cache-venv
      with:
        path: |
          .venv
          ~/.cache/pip
        key: venv-${{ runner.os }}-py${{ inputs.python-version }}-${{ steps.requirements-hash.outputs.hash }}
        restore-keys: |
          venv-${{ runner.os }}-py${{ inputs.python-version }}-

    - name: Create and activate virtual environment
      shell: bash
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install ".[dev]"
        pip install codecov

    - name: Activate virtual environment
      shell: bash
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        source .venv/bin/activate

    - name: Run tests
      id: run-tests
      shell: bash
      run: |
        source .venv/bin/activate
        case "${{ inputs.test-type }}" in
          "unit")
            TEST_PATH="tests/unit"
            ;;
          "integration")
            TEST_PATH="tests/integration"
            ;;
          *)
            TEST_PATH="tests/unit tests/integration"
            ;;
        esac

        PYTHONPATH=src pytest $TEST_PATH -n auto \
          && echo "success=true" >> $GITHUB_OUTPUT \
          || echo "success=false" >> $GITHUB_OUTPUT

    - name: Upload coverage to Codecov
      shell: bash
      run: |
        source .venv/bin/activate
        codecov --token "${{ inputs.codecov-token }}" \
                --file coverage.xml \
                --flags "${{ inputs.test-type }}_py${{ inputs.python-version }}" \
                --name "${{ inputs.test-type }} tests (Python ${{ inputs.python-version }})"
