name: Antivirus Security Scan
on:
  workflow_dispatch:
    inputs:
      scan_scope:
        description: "Scan scope (all/changed)"
        required: true
        default: "changed"
        type: choice
        options:
          - all
          - changed
      fail_on_findings:
        description: "Fail workflow if threats found"
        required: true
        default: true
        type: boolean
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - "feature/**"
      - "release/**"
  push:
    branches:
      - main
      - "feature/**"
      - "release/**"
  schedule:
    - cron: "0 0 * * 0" # Weekly scan on Sundays

permissions:
  contents: read
  security-events: write
  issues: write # Added for creating issues

jobs:
  antivirus-scan:
    runs-on: ubuntu-latest
    # Add condition to prevent duplicate runs on PRs
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run ClamAV scan
        id: clamav
        uses: ./.github/actions/security/clamav
        with:
          scan_scope: ${{ inputs.scan_scope || 'changed' }}
          fail_on_findings: ${{ inputs.fail_on_findings || 'true' }}
          exclude_dirs: ".git,node_modules,venv,.pytest_cache,__pycache__"
          output_format: "json"

      - name: Check scan results
        if: steps.clamav.outputs.threats_found > 0
        run: |
          echo "::warning ::Found ${{ steps.clamav.outputs.threats_found }} potential security threats!"

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: clamav-results
          path: ${{ steps.clamav.outputs.report_path }}

      - name: Create issue for threats
        if: steps.clamav.outputs.threats_found > 0 && github.event_name != 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('${{ steps.clamav.outputs.report_path }}', 'utf8'));

            const threatList = report.threats
              .map(t => `- ${t.file}: ${t.threat}`)
              .join('\n');

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Threats Detected by ClamAV',
              body: `ClamAV scan detected ${report.scan_summary.threats_found} potential security threats:

            ${threatList}

            Scan completed at: ${report.scan_summary.scan_date}
            Total files scanned: ${report.scan_summary.files_scanned}

            Triggered by: ${github.event_name}
            Branch: ${github.ref}

            Please investigate these files for potential security risks.`
            });
