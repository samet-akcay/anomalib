name: Manual Security Checks

on:
  workflow_dispatch:
    inputs:
      security_tool:
        description: "Select security tool to run"
        required: true
        type: choice
        options:
          - all
          - semgrep
          - virus-scan
          - bandit
          - trivy
      severity_level:
        description: "Severity level for Trivy (comma-separated)"
        required: false
        default: "CRITICAL,HIGH"
        type: string
      python_version:
        description: "Python version for Bandit"
        required: false
        default: "3.10"
        type: string
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**"

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  semgrep:
    name: Semgrep Security Scan
    if: |
      github.event_name == 'workflow_dispatch' &&
      (inputs.security_tool == 'semgrep' || inputs.security_tool == 'all') ||
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/static-analysis/semgrep
        with:
          publish_token: ${{ secrets.SEMGREP_APP_TOKEN }}
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const message = conclusion === 'success'
              ? '✅ Semgrep security scan passed'
              : '❌ Semgrep security scan failed - please check the logs';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  virus-scan:
    name: ClamAV Virus Scan
    if: |
      github.event_name == 'workflow_dispatch' &&
      (inputs.security_tool == 'virus-scan' || inputs.security_tool == 'all') ||
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/security/clamav
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const message = conclusion === 'success'
              ? '✅ Virus scan passed'
              : '❌ Virus scan failed - please check the logs';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  bandit:
    name: Bandit Security Scan
    if: |
      github.event_name == 'workflow_dispatch' &&
      (inputs.security_tool == 'bandit' || inputs.security_tool == 'all') ||
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/security/bandit
        with:
          python-version: ${{ inputs.python_version || '3.10' }}
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const message = conclusion === 'success'
              ? '✅ Bandit security scan passed'
              : '❌ Bandit security scan failed - please check the logs';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  trivy:
    name: Trivy Security Scan
    if: |
      github.event_name == 'workflow_dispatch' &&
      (inputs.security_tool == 'trivy' || inputs.security_tool == 'all') ||
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/security/trivy
        with:
          severity: ${{ inputs.severity_level || 'CRITICAL,HIGH' }}
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const message = conclusion === 'success'
              ? '✅ Trivy security scan passed'
              : '❌ Trivy security scan failed - please check the logs';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  summary:
    name: Security Checks Summary
    needs: [semgrep, virus-scan, bandit, trivy]
    runs-on: ubuntu-latest
    if: always() && (needs.semgrep.result != 'skipped' || needs.virus-scan.result != 'skipped' || needs.bandit.result != 'skipped' || needs.trivy.result != 'skipped')
    steps:
      - name: Check job status
        run: |
          echo "Security Scan Summary:"

          # Function to print status
          print_status() {
            local tool=$1
            local result=$2

            if [[ "$result" == "success" ]]; then
              echo "✅ $tool: Passed"
            elif [[ "$result" == "failure" ]]; then
              echo "❌ $tool: Failed"
            elif [[ "$result" == "skipped" ]]; then
              echo "⏭️ $tool: Skipped"
            else
              echo "❓ $tool: Unknown status"
            fi
          }

          print_status "Semgrep" "${{ needs.semgrep.result }}"
          print_status "Virus Scan" "${{ needs.virus-scan.result }}"
          print_status "Bandit" "${{ needs.bandit.result }}"
          print_status "Trivy" "${{ needs.trivy.result }}"

      - name: Add PR Summary Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const results = {
              semgrep: '${{ needs.semgrep.result }}',
              virusScan: '${{ needs.virus-scan.result }}',
              bandit: '${{ needs.bandit.result }}',
              trivy: '${{ needs.trivy.result }}'
            };

            const getEmoji = (result) => {
              switch(result) {
                case 'success': return '✅';
                case 'failure': return '❌';
                case 'skipped': return '⏭️';
                default: return '❓';
              }
            };

            const summary = Object.entries(results)
              .map(([tool, result]) => `${getEmoji(result)} ${tool}: ${result}`)
              .join('\n');

            const message = `## Security Checks Summary\n\n${summary}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
